port = 12346
seed = 1111
dist = 'DDP'

lr = 0.0001
lr_backbone = 0.0001
weight_decay = 0.0001
lr_drop = 5
batch_size = 2
num_workers = 2 # change here
output_dir = "/home/tiny/w4/STR_e2e/saved/"
clip_max_norm = 0.1
start_epoch = 0
epochs = 100
device = 'cuda'
Query_Num = 50
n_channels = 3
o_classes = 512

GradCheck = 0

D_model = 512
# # Parameters for get_images (ds_load.py):
# # ==============================================================================
# get_images.max_w = 750
# get_images.max_h = 750
# get_images.nch = %n_channels
#
# # Parameters for SameTrCollate (ds_load.py):
# # ==============================================================================
# SameTrCollate.prjAug = True
# SameTrCollate.prjVal = 125
#
# # Parameters for train (train.py):
# # ==============================================================================
# train.experiment_name = 'iam_gin_test_'
#
# train.AMP = False
# train.WdB = False
# train.wdbprj = 'prj_Name'
# train.train_data_list = 'iam/train.gc'
# train.train_data_path = '/home/tiny/w4/OrigamiNet/iam_data/pargs/'
# train.test_data_list  = 'iam/val.gc'
# train.test_data_path  = '/home/tiny/w4/OrigamiNet/iam_data/pargs/'
# train.train_batch_size = 1
# train.val_batch_size   = 1
# train.workers = 1
# train.lr = 0.01
# train.continue_model = 'saved_models/iam_gin_test_/best_norm_ED.pth'
# train.valInterval = 500
# train.num_iter = 0
# train.bert_base_model = 'emilyalsentzer/Bio_ClinicalBERT'

# Parameters for OrigamiNet (cnv_model.py):
# ==============================================================================
OrigamiNet.n_channels = %n_channels
OrigamiNet.o_classes  = %o_classes
OrigamiNet.fup = 33
OrigamiNet.GradCheck = %GradCheck

OrigamiNet.nlyrs = 12
OrigamiNet.wmul = 1.0

OrigamiNet.lszs = {0:  128,
            2:  256,
            4:  512,
            11: 256  }

##resize structure##
MaxPool2d.kernel_size = (2,2)

Upsample.mode = 'bilinear'
Upsample.align_corners = True
s1/Upsample.size = (450,15)
s2/Upsample.size = (1100,8)

OrigamiNet.lreszs = {
                  0: @MaxPool2d(),
                  2: @MaxPool2d(),
                  4: @MaxPool2d(),

                  6: @PadPool(),
                  8: @PadPool(),

                  10: @s1/Upsample(),
                  11: @s2/Upsample()
            }


# Parameters for InitBlock (cnv_model.py):
# ==============================================================================
InitBlock.n_channels = %n_channels

# Parameters for GateBlock (cnv_model.py):
# ==============================================================================
GateBlock.GradCheck = %GradCheck

## positional encoding

build_position_encoding.hidden_dim = %D_model ## not sure????
build_position_encoding.method = '1d'
build_position_encoding.dropout = 0.1

## backbone


## transformer
Transformer.d_model = %D_model
Transformer.nhead = 8
Transformer.num_encoder_layers = 6
Transformer.num_decoder_layers = 6
Transformer.dim_feedforward = 2048
Transformer.dropout = 0.1
Transformer.activation = 'relu'
Transformer.normalize_before = False
Transformer.return_intermediate_dec = False

# Parameters for TextEncoder
TextEncoder.bert_base_model = 'emilyalsentzer/Bio_ClinicalBERT'
TextEncoder.out_dim = 512
TextEncoder.freeze_layers = [0,1,2,3,4,5]

# Parameters for build_quester
build_quester.device = %device
build_quester.num_queries = %Query_Num

#Parameters for query_generate_dct_phoc

#Parameters for dataset
build_dataset.train_file_list = "/home/tiny/w4/STR_e2e/ic15/train.ln"
build_dataset.train_label_path = "/home/tiny/w4/datasets/ic15/train_gt/"
build_dataset.train_image_path = "/home/tiny/w4/datasets/ic15/train/"
build_dataset.test_file_list = "/home/tiny/w4/STR_e2e/ic15/test.ln"
build_dataset.test_label_path = "/home/tiny/w4/datasets/ic15/train_gt/"
build_dataset.test_image_path = "/home/tiny/w4/datasets/ic15/train/"
build_dataset.ralph_path = "/home/tiny/w4/STR_e2e/ic15/alph.npy"
build_dataset.num = 50

get_images.size = 768
get_images.extend = ".jpg"
get_images.n_dim = 3

# aug_labels
aug_labels.num=%Query_Num
